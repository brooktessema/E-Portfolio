---
title: "Geospatial Projects"
format: html
editor: visual
---

Welcome to the Geospatial Projects page! Here, you'll find a collection of my work, showcasing my journey from the humble beginnings of exploring geospatial data to tackling advanced projects in my graduate studies. Each project highlights my growth in using spatial analysis tools to address real-world environmental challenges.

------------------------------------------------------------------------

### **Monitoring Mangrove Restoration Using Sentinel - 2 Imagery**

As the capstone project of my Master's program in Geomatics for Environmental Management, this project is a significant culmination of my academic journey. For my project, I collaborated with **Blue Ventures**, a marine conservation organization focused on coastal ecosystem restoration ([learn more about Blue Ventures](https://blueventures.org/what-we-do/)). I aimed to monitor mangrove restoration efforts in the Bay of Assassins, Madagascar. Using Sentinel-2 satellite imagery, the project evaluates changes in mangrove forest area and health from 2019 to 2024, supporting Blue Ventures’ mission to protect and restore mangroves in the region.

The study investigates the question: *"To what extent can Sentinel-2 imagery detect changes in mangrove forest area and health at restoration sites in Madagascar?"* It aimed to quantify mangrove vegetation changes, identify areas of growth and loss, and assess vegetation health.

#### **Methods & Tools**

-   **Data**: Sentinel-2 satellite imagery (2019–2024).

-   **Tool**: Google Earth Engine (GEM v2) for time-series analysis.

-   **Analysis**:

    -   Quantify changes in mangrove extent over time.

    -   Identify areas of significant growth and loss.

    -   Assess vegetation health using spectral indices (NDVI, EVI).

This research is particularly important because mangrove ecosystems play a vital role in coastal protection, carbon sequestration, and supporting biodiversity. You can read my full report here but I've summarized and visualized some of my results below.

**Classification Outputs (2019-2024)**\
This visualization shows the changes in mangrove forest extent and vegetation health over the past five years, highlighting areas of growth, loss, and overall restoration progress in the Bay of Assassins, Madagascar.

```{r leaflet, include = FALSE}
library(dplyr); library(leaflet)

m <- leaflet() %>%
  addProviderTiles("Esri.WorldImagery") %>%
  addScaleBar(position = c("bottomleft")) %>%
  setView(-123.1207, 49.2827, zoom = 11)

```

```{r map, echo=FALSE}

```

------------------------------------------------------------------------

### **Using Python for Geo-spatial Analysis**

For this project, I applied three geo-processing techniques, intersect, buffer, and area calculation, to my capstone research on mangrove ecosystems. Using Python, I intersected my study area with the Global Mangrove Watch dataset, applied a 25-meter buffer to the mangroves, and calculated their total area. I also automated data acquisition by scripting a download process for the datasets.

**Methods with Code Snippets:**

The first steps was to download the Global Mangrove Watch dataset. The code snippet below shows the automated downloading and extraction of Global Mangrove Watch data.

::: {.panel-tabset group="language"}
## Automated Downloading of Mangrove Data

``` (.python)
import requests
import zipfile
url = "https://zenodo.org/records/6894273/files/gmw_v3_2020_vec.zip?download=1"

#Fetching and downloading the data
data = requests.get(url)

#saving data to a file
with open('boa_mangrove_data.zip', 'wb') as file:
    file.write(data.content)
print("Download Completed Successfully")

#Extracting data from ZIP file and saving in data folder
zip_file_path = 'boa_mangrove_data.zip'
extract_file = 'data_' # Data folder where I want to save the extracted contents

# Opening the ZIP file
with zipfile.ZipFile(zip_file_path, 'r') as zip_ref:
    zip_ref.extractall(extract_file)

print(f'Contents extracted to: {extract_file}')
```

## Geo-Processing Steps

``` (.python)
    # Term Concept 2.1 - Using Intersect to extract mangroves in AOI 
    from Global Mangrove Watch (GMW) Data
    arcpy.analysis.Intersect(['gmw_v3_2020_vec.shp',   
    'TAHIRY_HONKO_MANAGEMENT_AREA.shp'], 
    "boa_mangroves.shp", "ALL") 
    print('Mangroves clipped successfully.')

    # Term Concept 2.2 - Creating the 25 meter buffer for mangroves
    boa_buffer = arcpy.analysis.Buffer(in_features='boa_mangroves.shp',
    out_feature_class='boa_buffer.shp', 
    buffer_distance_or_field='25 meters', dissolve_option="ALL")
    print('Buffer created successfully.')

    #Term Concept 3 - Calculating Total Area of Mangroves
    mangrove_areas = list() #Creating an empty list to store output of Search 
    Cursor
    with arcpy.da.SearchCursor("boa_mangroves.shp", ["Shape_Area"]) as cursor:
        for row in cursor:
            mangrove_areas.append(row[0]) #adding results from Shape_Area into 
            list
    total_area = sum(mangrove_areas) * 100 #converting area from Square Km to ha
    print("Total Mangrove Area (ha):",total_area,"ha")
    del cursor
    del row
```

(Assuming *nir* and *red* are numpy arrays)
:::

**Reflection:**\
I really enjoyed the opportunity to apply my Python skills beyond the classroom and directly to my research. Writing my own code to process geo-spatial data, instead of pre-defined tools, was both challenging and rewarding. What made this project even more exciting was automating the workflow by scripting data set downloads. This experience reinforced how powerful Python can be in geo-spatial analysis and gave me confidence in integrating coding into my research more effectively.

--------------------------------------------------------------------------------------------------------------------

### **Investigating Species Movement Corridors**

**Overview:**\
For this assignment, I performed a Least Cost Path analysis in ArcGIS Pro to evaluate optimal routes between a source and target location, considering environmental factors like terrain, land cover, and roads. The goal was to determine the most efficient path by calculating a cost raster, which incorporates various factors that influence movement, such as slope and proximity to roads.

**Methods & Tools:**\
Using ArcGIS Pro, I created a cost raster incorporating factors like terrain slope, land cover, and proximity to roads. I then performed the Least Cost Path analysis to identify the most efficient route between the source and target locations.

**Key Results:**\
The analysis provided the optimal route based on minimized movement costs and highlighted the impact of terrain and land cover on accessibility.

![Least Cost Map of Grizzly Bears Habitat](images/BT_GEM-510_Least_Cost_Map%20conv%201.png){alt="Least Cost Map of Grizzly Bears Habitat" fig-align="center" width="15cm"}

**Reflection:**\
This assignment expanded my interest in species conservation by showing me how spatial analysis can help identify the dynamics of movement corridors and the impacts of habitat fragmentation. It emphasized the complexity of factors influencing species movement and habitat selection.

## Code Snippets

Sample code snippet. Notice that you can provide a toggle to switch between coding languages - this is referred to as a 'tabset' in quarto. It is good practice to try and convert your R code to python, and vice-versa to demonstrate coding proficiency. For example, let's showcase a function for calculating NDVI in R and Python.

::: {.panel-tabset group="language"}
## R

``` (.r)
calc_ndvi <- function(nir, red){
  ndvi <- (nir-red)/(nir+red)
  return(ndvi)
}
```

(Assuming *nir* and *red* are terra rast objects)

## Python

``` (.python)
def calc_ndvi(nir, red): 
  ndvi = (nir - red)/(nir + red)
  return(ndvi)
```

(Assuming *nir* and *red* are numpy arrays)
:::

------------------------------------------------------------------------

------------------------------------------------------------------------

## External links

You can also provide a frame linking to external websites. For example, here is a Google Earth Engine application I developed - which I embedded in this webpage using the code below:

```{code}

<iframe width="900" height="700"
src="https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool">
</iframe>
```

The full-screen GEE application is available [here](https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool) in case you're interested.

(To use the GEE tool, navigate to any city you'd like, hit apply filters, and click anywhere on the map to retrieve a time-series of Landsat surface temperature observations for that point. Areas where the maximum temp exceeded 35 degrees Celsius in your date-range are highlighted in red.)

```{=html}
<iframe width="900" height="700" src="https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool"></iframe>
```

## External links

You can also provide a frame linking to external websites. For example, here is a Google Earth Engine application I developed - which I embedded in this webpage using the code below:

`{code}  <iframe width="900" height="700" src="https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool"> </iframe>}`

The full-screen GEE application is available [here](https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool) in case you're interested.

(To use the GEE tool, navigate to any city you'd like, hit apply filters, and click anywhere on the map to retrieve a time-series of Landsat surface temperature observations for that point. Areas where the maximum temp exceeded 35 degrees Celsius in your date-range are highlighted in red.)

```{=html}
<iframe width="900" height="700" src="https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool"></iframe>
```

## External links

You can also provide a frame linking to external websites. For example, here is a Google Earth Engine application I developed - which I embedded in this webpage using the code below:

`{code}  <iframe width="900" height="700" src="https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool"> </iframe>}`

The full-screen GEE application is available [here](https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool) in case you're interested.

(To use the GEE tool, navigate to any city you'd like, hit apply filters, and click anywhere on the map to retrieve a time-series of Landsat surface temperature observations for that point. Areas where the maximum temp exceeded 35 degrees Celsius in your date-range are highlighted in red.)

```{=html}
<iframe width="900" height="700" src="https://ee-melserramon.projects.earthengine.app/view/thermal-analysis-tool"></iframe>
```
